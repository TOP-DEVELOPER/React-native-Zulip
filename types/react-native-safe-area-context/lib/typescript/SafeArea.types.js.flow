/* @flow
 * @generated by TsFlower
 */
import type {
  NativeSyntheticEvent as $tsflower_subst$RN$NativeSyntheticEvent,
  ViewProps as $tsflower_subst$RN$ViewProps,
} from 'tsflower/subst/react-native';

import type { ReactNode as $tsflower_subst$React$ReactNode } from 'tsflower/subst/react';
import * as React from 'react';
import 'react-native';
export type Edge = 'top' | 'right' | 'bottom' | 'left';

export interface EdgeInsets {
  top: number;
  right: number;
  bottom: number;
  left: number;
}

export interface Rect {
  x: number;
  y: number;
  width: number;
  height: number;
}

export interface Metrics {
  insets: EdgeInsets;
  frame: Rect;
}

export type InsetChangedEvent = $tsflower_subst$RN$NativeSyntheticEvent<Metrics>;
export type InsetChangeNativeCallback = (event: InsetChangedEvent) => void;

export type NativeSafeAreaProviderProps = {
  ...$tsflower_subst$RN$ViewProps,
  children?: $tsflower_subst$React$ReactNode,
  onInsetsChange: InsetChangeNativeCallback,
  ...
};

export type NativeSafeAreaViewProps = {
  ...$tsflower_subst$RN$ViewProps,
  children?: $tsflower_subst$React$ReactNode,
  mode?: 'padding' | 'margin',
  edges?: $ReadOnlyArray<Edge>,
  ...
};
