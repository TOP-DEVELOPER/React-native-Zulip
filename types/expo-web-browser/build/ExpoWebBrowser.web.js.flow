/* @flow
 * @generated by TsFlower
 */
import {
    type WebBrowserAuthSessionResult,
    type WebBrowserOpenOptions,
    type WebBrowserResult,
} from "./WebBrowser.types";

declare var _default: {
    +name: string,
    openBrowserAsync(url: string, browserParams?: WebBrowserOpenOptions): Promise<WebBrowserResult>,
    dismissAuthSession(): void,
    maybeCompleteAuthSession({ skipRedirectCheck?: boolean | void, ... }): {
        type: "success" | "failed",
        message: string,
        ...
    },
    openAuthSessionAsync(
        url: string,
        redirectUrl?: string | void,
        openOptions?: WebBrowserOpenOptions | void
    ): Promise<WebBrowserAuthSessionResult>,
    ...
};

export default _default;
declare export function featureObjectToString(features: { [key: string]: any }): string;
