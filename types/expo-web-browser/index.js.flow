/**
 * Types for the NPM package `expo-web-browser`.
 *
 * @flow strict-local
 */

import type {
  WebBrowserAuthSessionResult,
  WebBrowserCoolDownResult,
  WebBrowserCustomTabsResults,
  WebBrowserMayInitWithUrlResult,
  WebBrowserOpenOptions,
  WebBrowserRedirectResult,
  WebBrowserResult,
  WebBrowserWarmUpResult,
  WebBrowserWindowFeatures,
} from './WebBrowser.types';

export * from './WebBrowser.types'
declare export function getCustomTabsSupportingBrowsersAsync(): Promise<WebBrowserCustomTabsResults>;
declare export function warmUpAsync(browserPackage?: string): Promise<WebBrowserWarmUpResult>;
declare export function mayInitWithUrlAsync(
  url: string,
  browserPackage?: string,
): Promise<WebBrowserMayInitWithUrlResult>;
declare export function coolDownAsync(browserPackage?: string): Promise<WebBrowserCoolDownResult>;
declare export function openBrowserAsync(
  url: string,
  browserParams?: WebBrowserOpenOptions,
): Promise<WebBrowserResult>;
declare export function dismissBrowser(): void;
declare export function openAuthSessionAsync(
  url: string,
  redirectUrl: string,
  browserParams?: WebBrowserOpenOptions,
): Promise<WebBrowserAuthSessionResult>;
declare export function dismissAuthSession(): void;

/**
 * Attempts to complete an auth session in the browser.
 * @param options
 */
declare export function maybeCompleteAuthSession(options?: {
  skipRedirectCheck?: boolean,
  ...
}): {
  type: 'success' | 'failed',
  message: string,
  ...
};
