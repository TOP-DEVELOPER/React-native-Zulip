#!/bin/bash
set -e

## CLI PARSING

usage() {
    cat >&2 <<EOF
usage: tools/test [--full] [SUITES]

Run our tests.

Options:
  --coverage  Collect test-coverage information.  Only meaningful
              with --full.
  --full      Run on all files (default: only files changed in this
              branch, as found by \`tools/info changed-files\`.)

Suites: (default: all)
  flow
  lint
  jest
  prettier
EOF
    exit 2
}

coverage=
full=
suites=()
while (( $# )); do
    case "$1" in
        --coverage) coverage=1; shift;;
        --full) full=1; shift;;
        flow|lint|jest|prettier)
            suites+=("$1"); shift;;
        *) usage;;
    esac
done

if [ -z "$suites" ]; then
    suites=(flow lint jest prettier)
fi


## EXECUTION

rootdir=$(git rev-parse --show-toplevel)
cd "$rootdir"

PATH=node_modules/.bin:"$PATH"

changed_js() {
    tools/info changed-files | grep '^src/.*\.js$'
}

failed=()
for suite in "${suites[@]}"; do
    echo "Running $suite..."
    case "$suite" in
        flow)
            flow
            ;;
        lint)
            if [ -n "$full" ]; then
                eslint --max-warnings=0 src/
            else
                files=( $(changed_js) ) || continue
                eslint --max-warnings=0 "${files[@]}"
            fi
            ;;
        jest)
            if [ -n "$full" ]; then
                if [ -n "$coverage" ]; then
                    jest --maxWorkers=2 --coverage
                    coveralls <./coverage/lcov.info
                else
                    jest --maxWorkers=2
                fi
            else
                jest --changedSince "$(tools/info upstream-ref)"
            fi
            ;;
        prettier)
            if [ -n "$full" ]; then
                prettier-eslint --list-different \
                  --eslint-config-path ./tools/formatting.eslintrc.yaml \
                  'src/**/*.js'
            else
                prettier-eslint --list-different \
                  --eslint-config-path ./tools/formatting.eslintrc.yaml \
                  $(changed_js)
            fi
            ;;
    esac || failed+=($suite)
done

if [ -n "$failed" ]; then
    cat >&2 <<EOF

FAILED: ${failed[*]}
EOF
    exit 1
fi

echo "Passed!"
